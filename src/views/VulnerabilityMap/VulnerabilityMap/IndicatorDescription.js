import React, { Component } from 'react';
import connect from 'react-redux/es/connect/connect';
import t from '../../../i18n';

class IndicatorDescription extends Component {
  constructor(props) {
    super(props);
    this.divRef = React.createRef();
  }

  render() {
    const descContent = () => {
      if (this.props.vulnerability.indicator) {
        const { indicator } = this.props.vulnerability;

        return (
          <>
            <i>
              <b>{t(`vulnerability.map.indicators.${indicator}.description.title`, {lang: this.props.language})}</b>
            </i>
            <br />
            <i>{t(`vulnerability.map.indicators.${indicator}.description.text`, {lang: this.props.language})}</i>
          </>
        );
      }
      return null;
    };

    return (
      <div
        ref={this.divRef}
        style={{
 minHeight: 60, marginLeft: 30, marginRight: 30, marginBottom: 20, marginTop: 20 
}}
      >
        {descContent()}
      </div>
    );
  }

  getHeight() {
    return this.divRef.current ? this.divRef.current.getBoundingClientRect().height : 0;
  }
}

const mapStateToProps = (state) => ({
  language: state.language,
  vulnerability: state.vulnerability
});

export default connect(
  mapStateToProps,
  null,
  null,
  { forwardRef: true }
)(IndicatorDescription);
