import { find } from 'lodash-es';
import t from '../../../i18n';

class Range {
  constructor(label, min, max, color) {
    this.name = label;
    this.min = min;
    this.max = max;
    this.color = color;
  }

  label() {
    return `${this.name} (${this.min} - ${this.max})`;
  }

  isInRange(value) {
    return value <= this.max;
  }
}

export const RANGEMAPS = lang => (
  {
    findRange: (adminLevel, indicator, value) => {
      const ranges = RANGEMAPS(lang)[adminLevel][indicator];
      return find(ranges, (range) => range.isInRange(value));
    },
    admin1: {
      via: [
        new Range(t('vulnerability.map.legend.low', {lang} ), 0.0325, 0.0989, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.099, 0.2699, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.27, 0.4475, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.4476, 0.6705, '#DE3C2A')
      ],
      ffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.2402, 0.442, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.4421, 0.6814, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.6815, 0.8, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.8001, 0.9365, '#DE3C2A')
      ],
      viaffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0097, 0.0792, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.0793, 0.1748, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.1749, 0.3283, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.3284, 0.5578, '#DE3C2A')
      ]
    },
    admin2: {
      via: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0162, 0.2663, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.2664, 0.4889, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.489, 0.6603, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.6604, 0.8515, '#DE3C2A')
      ],
      ffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0338, 0.3804, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.3805, 0.6891, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.6892, 0.7962, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.7963, 0.9647, '#DE3C2A')
      ],
      viaffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0033, 0.1019, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.102, 0.2709, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.271, 0.4438, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.4439, 0.7015, '#DE3C2A')
      ]
    },
    admin3: {
      via: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0094, 0.2438, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.2439, 0.4802, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.4803, 0.7166, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.7167, 0.9525, '#DE3C2A')
      ],
      ffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0338, 0.2733, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.2734, 0.5132, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.5133, 0.7529, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.753, 0.9924, '#DE3C2A')
      ],
      viaffnn: [
        new Range(t('vulnerability.map.legend.low', {lang}), 0.0003, 0.0635, '#2EAD48'),
        new Range(t('vulnerability.map.legend.average', {lang}), 0.0636, 0.2497, '#DEE029'),
        new Range(t('vulnerability.map.legend.high', {lang}), 0.2498, 0.4781, '#EBB12B'),
        new Range(t('vulnerability.map.legend.veryhigh', {lang}), 0.4782, 0.8496, '#DE3C2A')
      ]
    }
  }
);
