import React, { Component } from 'react';
import { connect } from 'react-redux';
import ACTIONS from '../../modules/action';
import DefaultLayout from '../../containers/DataVizContainerMapLayout/DataVizContainerMapLayout';

import './style.scss';
import t from '../../i18n';

class VulnerabilityMapLayout extends Component {
  getNavConf() {
    return {
      items: [
        {
          name: t('hunger.menu.vulnerability_map', { lang: this.props.language }),
          icon: 'fa fa-exclamation-triangle',
          children: [
            {
              name: t('home.menu.hunger_analytics.vulnerability_map.admin1', { lang: this.props.language }),
              icon: `fa ${this.props.vulnerability.admin1 ? 'fa-check-circle' : 'fa-circle-o'}`, // fa-circle-o,
              attributes: {
                onClick: (e) => {
                  e.preventDefault();
                  this.props.changeLevel('admin1');
                },
                class: this.props.vulnerability.admin1 ? 'nav-link navitem_selected' : 'nav-link'
              },
              custom: true
            },
            {
              name: t('home.menu.hunger_analytics.vulnerability_map.admin2', { lang: this.props.language }),
              icon: `fa ${this.props.vulnerability.admin2 ? 'fa-check-circle' : 'fa-circle-o'}`, // fa-circle-o,
              attributes: {
                onClick: (e) => {
                  e.preventDefault();
                  this.props.changeLevel('admin2');
                },
                class: this.props.vulnerability.admin2 ? 'nav-link navitem_selected' : 'nav-link'
              },
              custom: true
            },
            {
              name: t('home.menu.hunger_analytics.vulnerability_map.admin3', { lang: this.props.language }),
              icon: `fa ${this.props.vulnerability.admin3 ? 'fa-check-circle' : 'fa-circle-o'}`, // fa-circle-o,
              attributes: {
                onClick: (e) => {
                  e.preventDefault();
                  this.props.changeLevel('admin3');
                },
                class: this.props.vulnerability.admin3 ? 'nav-link navitem_selected' : 'nav-link'
              },
              custom: true
            }
          ]
        }
      ]
    };
  }

  render() {
    return <DefaultLayout mainClass="internal" customSidebar={this.getNavConf()} {...this.props} />;
  }
}

const mapStateToProps = (state) => ({
  language: state.language,
  vulnerability: state.vulnerability
});

const mapDispatchToProps = (dispatch) => ({
  changeLevel: (newLevel) => dispatch(ACTIONS.VULNERABILITY.changeAdminLevel(newLevel))
});

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(VulnerabilityMapLayout);
